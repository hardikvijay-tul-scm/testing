/kaf###########################################
kafka.streams.enabled=true
pincodeserviceability.ats.auto.commit.interval.ms=1000

############ Schema Registry props  #################
schema.registry.url=http://pcschemaprod.tatacliq.com:8081,http://pcschema1prod.tatacliq.com:8081


############# kafka streams props  ###################
kafkastreams.auto.commit.interval.ms=1000 	

############# Kafka ReturnLogistics roperties ############
returnLogistics.scheduler.threadPool.maxSize=50
returnLogistics.scheduler.threadPool.size=20
returnLogistics.kafka.consumer.threadcount=11
returnLogistics.kafka.bootstrap.url=pckafkaprod.tatacliq.com:9092,pckafka1prod.tatacliq.com:9092
returnlogistics.kafka.topic=InsertLogistics
returnLogistics.kafka.group.id=InsertLogisticsGroup


########## Kafka DeleteLogistics Topic properties ###########
deleteLogistics.scheduler.threadPool.size=20
deleteLogistics.scheduler.threadPool.maxSize=50
deleteLogistics.kafka.consumer.threadcount=11
deleteLogistics.kafka.topic=DeleteLogistics
deleteLogistics.kafka.group.id=DeleteLogisticsGroup
deleteLogistics.kafka.bootstrap.url=pckafkaprod.tatacliq.com:9092,pckafka1prod.tatacliq.com:9092

server.servlet.context-path=/etl
server.port=9094
#debug=true



############################################
#  DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:oracle:thin:@omsprod.cfceafxhj0x3.ap-south-1.rds.amazonaws.com:1621/OMSPROD?cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true
spring.datasource.username=MPLPRDOMS
spring.datasource.password=x89o8Pj76%Eu
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#spring.jpa.show-sql=true
spring.jpa.show-sql=false
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto= none
#spring.jpa.hibernate.ddl-auto= update
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect

#################################################
##  hikari connection pool   ######################
spring.datasource.hikari.connection-timeout = 20000
spring.datasource.hikari.minimum-idle= 10
spring.datasource.hikari.maximum-pool-size= 10
spring.datasource.hikari.max-lifetime= 1000
spring.datasource.hikari.auto-commit =true


##########################################################
tables.modifiedby.field.value=SYSTEM

#################File Upload Utility properties###########
reverse.logistics.fixed-delay.in.milliseconds = 60000
reverse.logistics.utility.srcPinCodePath = /tmp/datasetup/input/source/
reverse.logistics.utility.destPinCodePath = /tmp/datasetup/input/destination/
reverse.logistics.utility.outputPath = /tmp/datasetup/output/
reverse.logistics.utility.failurePath = /tmp/datasetup/failure/
reverse.logistics.utility.clusterLaneTypeMappingPath = /tmp/datasetup/input/clusters/
reverse.logistics.utility.pincodeMaster = /tmp/datasetup/input/pincode/PincodeMaster.csv
reverse.logistics.utility.select.query.batch_size = 300
reverse.logistics.utility.max_thread = 20


spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.jdbc.batch_size=5000
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data = true

spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.open-in-view=false
